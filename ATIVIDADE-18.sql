/*CRIAÇÃO DO BANCO DE DADOS*/

CREATE DATABASE ATIVIDADE18;

/*CONECTANDO AO BANCO DE DADOS*/
USE ATIVIDADE18;

/*CRIANDO O BANCO DE DADOS*/
CREATE TABLE ATV18(
	ID_NF INT,
	ID_ITEM INT,
	COD_PROD INT,
	VALOR_UNIT FLOAT,
	QUANTIDADE INT,
	DESCONTO FLOAT
);

/*INSERINDO VALORES NA TABELA ATV18*/
INSERT INTO ATV18 VALUES(1,1,1,25.00,10,5);
INSERT INTO ATV18 VALUES(1,2,2,13.50,3,NULL);
INSERT INTO ATV18 VALUES(1,3,3,15.00, 2,NULL);
INSERT INTO ATV18 VALUES(1, 4, 4, 10.00, 1,NULL);
INSERT INTO ATV18 VALUES(1, 5, 5, 30.00, 1,NULL);
INSERT INTO ATV18 VALUES(2, 1, 3, 15.00, 4,NULL);
INSERT INTO ATV18 VALUES(2, 2, 4, 10.00,5,NULL);
INSERT INTO ATV18 VALUES(2, 3, 5, 30.00,7,NULL);
INSERT INTO ATV18 VALUES(3, 1, 1, 25.00,5,NULL);
INSERT INTO ATV18 VALUES(3, 2, 4, 10.00,4,NULL);
INSERT INTO ATV18 VALUES(3, 3, 5, 30.00,5,NULL);
INSERT INTO ATV18 VALUES(3, 4, 2, 13.50,7,NULL);
INSERT INTO ATV18 VALUES(4, 1, 5, 30.00,10,15);
INSERT INTO ATV18 VALUES(4, 2, 4, 10.00,12,5);
INSERT INTO ATV18 VALUES(4, 3, 1, 25.00,13,5);
INSERT INTO ATV18 VALUES(4, 4, 2, 13.50,15,5);
INSERT INTO ATV18 VALUES(5, 1, 3, 15.00,3,NULL);
INSERT INTO ATV18 VALUES(5, 2, 5, 30.00,6,NULL);
INSERT INTO ATV18 VALUES(6, 1, 1, 25.00,22,15);
INSERT INTO ATV18 VALUES(6, 2, 3, 15.00,25,20);
INSERT INTO ATV18 VALUES(7, 1, 1, 25.00,10,3);
INSERT INTO ATV18 VALUES(7, 2, 2, 13.50,10,4);
INSERT INTO ATV18 VALUES(7, 3, 3, 15.00,10,4);
INSERT INTO atv18 VALUES(7, 4, 5, 30.00,10,1);


/*
*A. Pesquise os itens que foram vendidos sem desconto. As colunas presentes no
* resultado da consulta são: ID_ITEM, COD_PROD E VALOR_UNIT.
*/

SELECT ID_NF AS "ID ITEM", COD_PROD AS "CODIGO DO PRODUTO", VALOR_UNIT AS "VALOR UNITARIO" 
FROM ATV18 
WHERE DESCONTO IS NULL;

/*
* B. Pesquise os itens que foram vendidos com desconto As colunas presente no
* resultado da consulta são: ID_ITEM, COD_PROD E VALOR_UNIT e o VALOR VENDIDO
*
*/

SELECT ID_NF AS "ID NOTA FISCAL", ID_ITEM  AS "ID ITEM", 
	COD_PROD AS "CODIGO DO PRODUTO", VALOR_UNIT AS "VALOR UNITARIO",
	VALOR_UNIT -(VALOR_UNIT*(DESCONTO/100)) AS "VALOR VENDIDO"	
FROM ATV18
WHERE DESCONTO IS NOT NULL;

/*
* C. Altere o valor do desconto(para zero) de todos os registros onde este campo é nulo
*/

UPDATE ATV18 SET DESCONTO = 0
WHERE DESCONTO IS NULL;

/*D. Pesquise os itens que foram vendidos. As colunas presentes no resultado da consulta são:
* ID_NF, ID_ITEM, COD_PROD, VALOR_TOTAL, DESCONTO, VALOR_VENDIDO.*/

SELECT ID_NF AS "ID NOTA FISCAL", ID_ITEM AS "ID ITEM", COD_PROD AS "CODIGO DO PRODUTO", 
	VALOR_UNIT AS "VALOR UNITARIO", QUANTIDADE*VALOR_UNIT AS "VALOR TOTAL", DESCONTO, VALOR_UNIT -(VALOR_UNIT*(DESCONTO/100)) AS "VALOR VENDIDO"
FROM ATV18;

/*E. Pesquise o valor total da NF e ordene o resultado do maior valor para o menor.
* As colunas presente no resultado da consulta são: ID_NF, VALOR_VALOR_TOTAL .
* Agrupe o resultado por COD_PROD.*/
SELECT ID_NF, QUANTIDADE * VALOR_UNIT AS "VALOR TOTAL" FROM ATV18
ORDER BY QUANTIDADE*(VALOR_UNIT) DESC;

/*
* F. Qual o menor, maior e o valor médio dos descontos dados por produto.
* As colunas presentes no resultado da consulta são COD_PROD, MENOR, MAIOR, MEDIA
* Agrupe o resultado da consulta por COD_PROD*/

SELECT COD_PROD AS"CODIGO DO PRODUTO", MIN(VALOR_UNIT) AS MENOR, MAX(VALOR_UNIT) AS MAIOR, 
AVG(VALOR_UNIT) AS MEDIA
FROM ATV18
ORDER BY COD_PROD ASC;

/*2. Crie uma base de dados Universidade com as tabelas a seguir:
* Alunos (MAT, nome, endereco, cidade)
* Disciplinas (COD_DISC, nome_disc, carga_hor)
* Professores (COD_PROF, nome, endereco, cidade)
* Turma (COD_DISC, COD_TURMA, COD_PROF, ANO horário)
* COD_DISC referência Disciplinas
* COD_PROF referencia Professores
* historicos (MAT, COD_DISC, COD_TURMA, COD_PROF, ANO, frequência, nota)
* MAT referencia a Alunos
* COD_DISC, COD_TURMA, COD_PROF, ANO referencia turma*/

/*CRIANDO O BANCO DE DADOS UNIVERSIDADE*/
CREATE DATABASE UNIVERSIDADE;

/* CONECTANDO COM O BANCO DE DADOS*/
USE UNIVERSIDADE;

/*CRIANDO AS TABELAS*/
CREATE TABLE ALUNOS(
	ID_MAT VARCHAR(20) PRIMARY KEY NOT NULL,
	nome VARCHAR(50),
	endereco VARCHAR(100),
	cidade VARCHAR(50)
);


CREATE TABLE DISCIPLINA(
	COD_DISCI VARCHAR(10) PRIMARY KEY NOT NULL,
 	NOME_DISC VARCHAR(50), 
 	CARGA_HOR INT
);

CREATE TABLE PROFESSORES(
	COD_PROF INT PRIMARY KEY NOT NULL NOT UNIQUE, 
	nome VARCHAR(50), 
	endereco VARCHAR(50),
	cidade VARCHAR(50)
);

CREATE TABLE TURMA(
	COD_TURMA VARCHAR(5) PRIMARY KEY NOT NULL,
	DISC_COD VARCHAR(10),  
	PROF_COD INT, 
	ANO INT,
	horario VARCHAR(10)
);

CREATE TABLE HISTORICOS(
	MAT_ID VARCHAR(20), 
	DISC_COD VARCHAR(10), 
	TURMA_COD VARCHAR(10), 
	PROF_COD VARCHAR(11), 
	ANO VARCHAR(10), 
	frequência INT, 
	nota FLOAT
);
/*COLOCANDO OS RELACIONAMENTOS DAS TABELAS*/

ALTER TABLE TURMA ADD FOREIGN KEY(PROF_COD)
REFERENCES PROFESSORES(COD_PROF);

ALTER TABLE TURMA ADD FOREIGN KEY(DISC_COD)
REFERENCES DISCIPLINA(COD_DISCI);

ALTER TABLE HISTORICOS ADD CONSTRAINT FK_HISTORICO_MAT FOREIGN KEY(MAT_ID)
REFERENCES ALUNOS(ID_MAT);

ALTER TABLE HISTORICOS ADD CONSTRAINT FK_HISTORICO_DISCIPLINA FOREIGN KEY(COD_DISC)
REFERENCES TURMA(COD_DISC);

ALTER TABLE HISTORICOS ADD CONSTRAINT FK_HISTORICO_TURMA FOREIGN KEY(COD_TURMA)
REFERENCES TURMA(COD_TURMA);

ALTER TABLE HISTORICOS ADD CONSTRAINT FK_HISTORICO_PROF FOREIGN KEY(PROF_COD)
REFERENCES TURMA(COD_TURMA);

ALTER TABLE HISTORICOS ADD CONSTRAINT FK_HISTORICO_ANO FOREIGN KEY(ANO)
REFERENCES TURMA(COD_TURMA);

/*INSERINDO VALORES NAS TABLAS*/
/*TABELA ALUNO*/
INSERT INTO ALUNOS VALUES(2015010101,"JOSE DE ALENCAR","RUA DAS ALMAS", "NATAL");
INSERT INTO ALUNOS VALUES(2015010102,"JOÃO JOSE","AVENIDA RUY CARNEIRO","JOÃO PESSOA");
INSERT INTO ALUNOS VALUES(2015010103,"MARIA JOAQUINA","RUA CARROSSEL","RECIFE");
INSERT INTO ALUNOS VALUES(2015010104,"MARIA DAS DORES","RUA DAS LADEIRAS","FORTALEZA");
INSERT INTO ALUNOS VALUES(2015010105,"JOSUÉ CLAUDINO DOS SANTOS","CENTRO","NATAL");
INSERT INTO ALUNOS VALUES(2015010106,"JOSUÉLISSON CLAUDINO DOS SANTOS","CENTRO","NATAL");

/*TABELA DISCIPLINA*/

INSERT INTO DISCIPLINA VALUES("BD","BANCO DE DADOS",100);
INSERT INTO DISCIPLINA VALUES("POO","PROGRAMAÇÃO COM ACESSO A BANCO DE DADOS",100);
INSERT INTO DISCIPLINA VALUES("WEB","AUTORIA WEB",50);
INSERT INTO DISCIPLINA VALUES("ENG","ENGENHARIA DE SOFTWARE",80);

/*TABELA PROFESSORES*/

INSERT INTO PROFESSORES VALUES(212131,"NICKERSON FERREIRA","RUA MANAIRA","JOÃO PESSOA");
INSERT INTO PROFESSORES VALUES(122135,"ADORILSON BEZERRA","AVENIDA SALGADO FILHO","NATAL");
INSERT INTO PROFESSORES VALUES(192011,"DIEGO OLIVEIRA","AVENIDA ROBERTO FREIRE","NATAL");

/*TABELA TURMA*/
INSERT INTO TURMA VALUES("BD",1,212131,2015,"11H-12H");
INSERT INTO TURMA VALUES("BD",2,212131,2015,"13H-14");
INSERT INTO TURMA VALUES("POO",1,192011,2015,"08H-09H");
INSERT INTO TURMA VALUES("WEB",1,192011,2015,"07H-08H");
INSERT INTO TURMA VALUES("ENG",1,2135,2015,"10H-11H");

/*TABELA HISTORICO*/
INSERT INTO HISTORICOS VALUES(2015011,1,"WEB",212131,2015,100,8.5);
INSERT INTO HISTORICOS VALUES(2015002,1,"BD",122135,2015,90,3.5);
INSERT INTO HISTORICOS VALUES(2015003,1,"POO",212131,2015,80,10.0);
INSERT INTO HISTORICOS VALUES(2015004,1,"POO",192011,2015,70,6.5);
INSERT INTO HISTORICOS VALUES(2015005,1,"ENG",192011,2015,100,4.5);
INSERT INTO HISTORICOS VALUES(2015006,1,"BD",212131,2015,90,9.0);

/*Encontre a MAT dos alunos com nota em BD em 2015 menor que 5*/
SELECT * FROM HISTORICOS
WHERE COD_TURMA = "BD"
AND NOTA < 5
AND ano = 2015;
/*encontre a MAT e calcule e calcule a média das notas dos alunos na disciplina de poo em 2015*/
SELECT AVG(NOTA) AS "MEDIA DA TURMA" FROM HISTORICOS
WHERE COD_TURMA = "POO"
AND ano = 2015;
/*encontre a MAT e calcule a média da notas dos alunos na disciplina de POO em 2015 e que es média seja superior a 6*/
SELECT AVG(NOTA) AS "MEDIA DA TURMA" FROM HISTORICOS
WHERE COD_TURMA = "POO"
AND NOTA > 6
AND ano = 2015;
/*Encontre quantos alunos não são de natal*/
SELECT COUNT(CIDADE) FROM ALUNOS
WHERE CIDADE != "NATAL";
